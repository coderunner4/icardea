<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>configuration</artifactId>
		<groupId>tr.com.srdc.icardea</groupId>
		<version>1.0-SNAPSHOT</version>
		<relativePath>icardea-config/pom.xml</relativePath>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>icardea</artifactId>
	<packaging>pom</packaging>
	<name>iCARDEA Project</name>
	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0-alpha-2</version>
				<executions>
					<execution>
						<id>propertiesForEngine</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>write-project-properties</goal>
						</goals>
						<configuration>
							<outputFile>
								${basedir}/icardea-careplanengine/src/main/resources/icardea.properties
							</outputFile>
						</configuration>
					</execution>
					<execution>
						<id>propertiesForCareManagementDB</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>write-project-properties</goal>
						</goals>
						<configuration>
							<outputFile>
								${basedir}/icardea-caremanagementdb/src/main/resources/icardea.properties
							</outputFile>
						</configuration>
					</execution> 
					<execution>
						<id>propertiesForCarePlanEditor</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>write-project-properties</goal>
						</goals>
						<configuration>
							<outputFile>
								${basedir}/icardea-careplaneditor/serverSide/src/main/resources/icardea.properties
							</outputFile>
						</configuration>
					</execution>
					<execution>
						<id>propertiesForCtsInvoker</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>write-project-properties</goal>
						</goals>
						<configuration>
							<outputFile>
								${basedir}/icardea-ctsinvoker/src/main/resources/icardea.properties
							</outputFile>
						</configuration>
					</execution>
					<execution>
						<id>propertiesForCts</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>write-project-properties</goal>
						</goals>
						<configuration>
							<outputFile>
								${basedir}/icardea-cts-ws/src/main/resources/icardea.properties
							</outputFile>
						</configuration>
					</execution>	
					<execution>
						<id>propertiesForCMWS</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>write-project-properties</goal>
						</goals>
						<configuration>
							<outputFile>
								${basedir}/icardea-caremanager-ws/src/main/resources/icardea.properties
							</outputFile>
						</configuration>
					</execution>
					<execution>
						<id>propertiesForConsentEditor</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>write-project-properties</goal>
						</goals>
						<configuration>
							<outputFile>
								${basedir}/icardea-consenteditor/src/main/resources/icardea.properties
							</outputFile>
						</configuration>
					</execution>
					<execution>
						<id>propertiesForConsentInvoker</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>write-project-properties</goal>
						</goals>
						<configuration>
							<outputFile>
								${basedir}/icardea-consenteditor-invoker/src/main/resources/icardea.properties
							</outputFile>
						</configuration>
					</execution>
				</executions>
				<inherited>false</inherited>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>sql-maven-plugin</artifactId>
					<version>1.4</version>
					<dependencies>
						<dependency>
							<groupId>mysql</groupId>
							<artifactId>mysql-connector-java</artifactId>
							<version>5.1.13</version>
						</dependency>
					</dependencies>
					<configuration>
						<driver>${jdbc.driverClassName}</driver>
						<url>jdbc:mysql://localhost:3306</url>
						<username>${mysql.username}</username>
						<password>${mysql.password}</password>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.cargo</groupId>
					<artifactId>cargo-maven2-plugin</artifactId>
					<version>1.0.3</version>
					<executions>
						<execution>
							<id>deploy</id>
							<phase>package</phase>
							<goals>
								<goal>deploy</goal>
							</goals>
						</execution>						
					</executions>
					<configuration>
						<skip>${skipDeploy}</skip>
						<wait>false</wait>
						<container>
							<containerId>tomcat6x</containerId>
							<type>installed</type>
							<home>${tomcat.home}</home>
							<zipUrlInstaller>
								<url>${tomcat.zip.url}</url>
								<installDir>${tomcat.install.dir}</installDir>
							</zipUrlInstaller>
						</container>
						<configuration>
							<type>existing</type>
							<home>${tomcat.home}</home>
							<properties>
								<cargo.tomcat.manager.url>http://localhost:8080/manager</cargo.tomcat.manager.url>
								<cargo.remote.username>icardea</cargo.remote.username>
								<cargo.remote.password>icardea</cargo.remote.password>
								<cargo.servlet.port>8080</cargo.servlet.port>
							</properties>
						</configuration>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<!--profile>
			<id>Configuration files creation</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>createConfigurations</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>properties-maven-plugin</artifactId>
						<version>1.0-alpha-2</version>
						<executions>
							<execution>
								<id>propertiesForEngine</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>write-project-properties</goal>
								</goals>
								<configuration>
									<outputFile>
										${basedir}/icardea-careplanengine/src/main/resources/icardea.properties
									</outputFile>
								</configuration>
							</execution>
							<execution>
								<id>propertiesForCareManagementDB</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>write-project-properties</goal>
								</goals>
								<configuration>
									<outputFile>
										${basedir}/icardea-caremanagementdb/src/main/resources/icardea.properties
									</outputFile>
								</configuration>
							</execution> 
							<execution>
								<id>propertiesForCarePlanEditor</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>write-project-properties</goal>
								</goals>
								<configuration>
									<outputFile>
										${basedir}/icardea-careplaneditor/serverSide/src/main/resources/icardea.properties
									</outputFile>
								</configuration>
							</execution>
							<execution>
								<id>propertiesForCtsInvoker</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>write-project-properties</goal>
								</goals>
								<configuration>
									<outputFile>
										${basedir}/icardea-ctsinvoker/src/main/resources/icardea.properties
									</outputFile>
								</configuration>
							</execution>
							<execution>
								<id>propertiesForCts</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>write-project-properties</goal>
								</goals>
								<configuration>
									<outputFile>
										${basedir}/icardea-cts-ws/src/main/resources/icardea.properties
									</outputFile>
								</configuration>
							</execution>	
							<execution>
								<id>propertiesForCMWS</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>write-project-properties</goal>
								</goals>
								<configuration>
									<outputFile>
										${basedir}/icardea-caremanager-ws/src/main/resources/icardea.properties
									</outputFile>
								</configuration>
							</execution>
							<execution>
								<id>propertiesForConsentInvoker</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>write-project-properties</goal>
								</goals>
								<configuration>
									<outputFile>
										${basedir}/icardea-consenteditor-invoker/src/main/resources/icardea.properties
									</outputFile>
								</configuration>
							</execution>
						</executions>
						<inherited>false</inherited>
					</plugin>
				</plugins>
			</build>
		</profile-->
		<profile>
			<id>Apache and Mongo Installation</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>installApacheAndMongo</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<phase>install</phase>
								<configuration>
									<tasks>
										<unzip src="${icardea.home}/tools_resources/python/mongodb-win32-i386-1.8.3.zip"
											dest="${icardea.home}/tools/mongo" overwrite="false"/>
										<mkdir dir="${icardea.home}/tools/mongo/mongodb-win32-i386-1.8.3/bin/data"/>
										<mkdir dir="data"/>
										<copy file="${icardea.home}/tools_resources/xdstools2.135.war" tofile="${icardea.home}/tools/apache-tomcat-6.0.20/webapps/xdstools2.135.war" overwrite="true"/>
										<copy file="${icardea.home}/tools_resources/tomcatConfig/.keystore" tofile="${icardea.home}/tools/apache-tomcat-6.0.20/conf/.keystore" overwrite="true"/>
										<copy file="${icardea.home}/tools_resources/tomcatConfig/.truststore" tofile="${icardea.home}/tools/apache-tomcat-6.0.20/conf/.truststore" overwrite="true"/>
										<copy file="${icardea.home}/tools_resources/tomcatConfig/server.xml" tofile="${icardea.home}/tools/apache-tomcat-6.0.20/conf/server.xml" overwrite="true"/>
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>Apache and Mongo Removal</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>removeApacheAndMongo</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<phase>clean</phase>
								<configuration>
									<tasks>
										<delete dir="${icardea.home}/tools/apache-tomcat-6.0.20"/>
										<delete dir="${icardea.home}/tools/mongo"/>
										<delete file="${icardea.home}/tools/apache-tomcat-6.0.20.zip"/>
										<delete dir="${icardea.home}/data"/>
										<delete dir="${icardea.home}/logs"/>
										<delete dir="${icardea.home}/bin/logs"/>
										<delete dir="${icardea.home}/icardea-caremanagementdb/data"/>
										<delete file="${icardea.home}/icardea-caremanagementdb/id_file"/>
										<delete file="${icardea.home}/bin/id_file"/>
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>Database Removal</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>dropDatabases</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>drop-db-icardea</id>
								<phase>clean</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<sqlCommand>drop database if exists icardea;
										drop database if exists consent;
										drop database if exists final_icardea;
										drop database if exists final_icardeaalarmdatabase;
										drop database if exists final_icardea_repository;
										drop database if exists icardea_gui;
									</sqlCommand>
									<onError>continue</onError>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<!--dependencies>
	<dependency>
		<groupId>org.twdata.maven</groupId>
		<artifactId>maven-cli-plugin</artifactId>
		<version>1.0.5</version>
	</dependency>
</dependencies-->
<pluginRepositories>
	<pluginRepository>
		<id>twdata.m2.repository</id>
		<name>GoogleCode Repository</name>
		<url>http://twdata-m2-repository.googlecode.com/svn</url>
	</pluginRepository>
</pluginRepositories>
<modules>
	<module>icardea-caremanagementdb</module>
	<module>icardea-caremanager-ws</module>
	<module>icardea-careplaneditor</module>
	<module>icardea-consenteditor</module>
	<module>icardea-careplanengine</module>
	<module>icardea-interop-fmwork/pixpdq</module>
	<module>icardea-cts-ws</module>
	<module>icardea-ctsinvoker</module>
	<module>icardea-consenteditor-invoker</module>
</modules>
<properties>
	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	<tomcat.zip.url>file:///${icardea.home}/tools_resources/apache-tomcat-6.0.20.zip</tomcat.zip.url>
	<tomcat.home>${icardea.home}/tools/apache-tomcat-6.0.20/</tomcat.home>
	<tomcat.install.dir>${icardea.home}/tools</tomcat.install.dir>
	<jdbc.driverClassName>com.mysql.jdbc.Driver</jdbc.driverClassName>
	<skip.deploy>false</skip.deploy>
</properties>
</project>
