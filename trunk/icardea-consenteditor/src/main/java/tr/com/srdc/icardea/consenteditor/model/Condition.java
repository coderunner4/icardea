//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.11.23 at 04:13:06 PM EET 
//


package tr.com.srdc.icardea.consenteditor.model;

import java.io.Serializable;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{model.consenteditor.srdc.com.tr}timeConstraint" minOccurs="0"/>
 *         &lt;element name="inEmergency" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="purpose" type="{model.consenteditor.srdc.com.tr}non_empty_string" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "timeConstraint",
    "inEmergency",
    "purpose"
})
@XmlRootElement(name = "condition")
@Entity(name = "Condition")
@Table(name = "CONDITION_")
@Inheritance(strategy = InheritanceType.JOINED)
public class Condition
    implements Serializable, Equals, HashCode
{

    protected TimeConstraint timeConstraint;
    protected Boolean inEmergency;
    protected String purpose;
    @XmlTransient
    protected Long hjid;

    /**
     * Gets the value of the timeConstraint property.
     * 
     * @return
     *     possible object is
     *     {@link TimeConstraint }
     *     
     */
    @ManyToOne(targetEntity = TimeConstraint.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "TIMECONSTRAINT_CONDITION_HJID")
    public TimeConstraint getTimeConstraint() {
        return timeConstraint;
    }

    /**
     * Sets the value of the timeConstraint property.
     * 
     * @param value
     *     allowed object is
     *     {@link TimeConstraint }
     *     
     */
    public void setTimeConstraint(TimeConstraint value) {
        this.timeConstraint = value;
    }

    /**
     * Gets the value of the inEmergency property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    @Basic
    @Column(name = "INEMERGENCY")
    public Boolean isInEmergency() {
        return inEmergency;
    }

    /**
     * Sets the value of the inEmergency property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setInEmergency(Boolean value) {
        this.inEmergency = value;
    }

    /**
     * Gets the value of the purpose property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PURPOSE", length = 255)
    public String getPurpose() {
        return purpose;
    }

    /**
     * Sets the value of the purpose property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPurpose(String value) {
        this.purpose = value;
    }

    /**
     * 
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "HJID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getHjid() {
        return hjid;
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setHjid(Long value) {
        this.hjid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Condition)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Condition that = ((Condition) object);
        {
            TimeConstraint lhsTimeConstraint;
            lhsTimeConstraint = this.getTimeConstraint();
            TimeConstraint rhsTimeConstraint;
            rhsTimeConstraint = that.getTimeConstraint();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "timeConstraint", lhsTimeConstraint), LocatorUtils.property(thatLocator, "timeConstraint", rhsTimeConstraint), lhsTimeConstraint, rhsTimeConstraint)) {
                return false;
            }
        }
        {
            Boolean lhsInEmergency;
            lhsInEmergency = this.isInEmergency();
            Boolean rhsInEmergency;
            rhsInEmergency = that.isInEmergency();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inEmergency", lhsInEmergency), LocatorUtils.property(thatLocator, "inEmergency", rhsInEmergency), lhsInEmergency, rhsInEmergency)) {
                return false;
            }
        }
        {
            String lhsPurpose;
            lhsPurpose = this.getPurpose();
            String rhsPurpose;
            rhsPurpose = that.getPurpose();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "purpose", lhsPurpose), LocatorUtils.property(thatLocator, "purpose", rhsPurpose), lhsPurpose, rhsPurpose)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            TimeConstraint theTimeConstraint;
            theTimeConstraint = this.getTimeConstraint();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "timeConstraint", theTimeConstraint), currentHashCode, theTimeConstraint);
        }
        {
            Boolean theInEmergency;
            theInEmergency = this.isInEmergency();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inEmergency", theInEmergency), currentHashCode, theInEmergency);
        }
        {
            String thePurpose;
            thePurpose = this.getPurpose();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "purpose", thePurpose), currentHashCode, thePurpose);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
