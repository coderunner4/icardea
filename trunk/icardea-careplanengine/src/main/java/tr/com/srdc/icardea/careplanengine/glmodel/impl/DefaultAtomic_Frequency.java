package tr.com.srdc.icardea.careplanengine.glmodel.impl;

//~--- non-JDK imports --------------------------------------------------------

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.*;
import edu.stanford.smi.protegex.owl.model.impl.*;

import tr.com.srdc.icardea.careplanengine.glmodel.*;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.owl-ontologies.com/unnamed.owl#Atomic_Frequency
 *
 * @version generated on Thu Jun 08 17:29:56 EEST 2006
 */
public class DefaultAtomic_Frequency extends DefaultGLIF_Entity implements Atomic_Frequency {
    public DefaultAtomic_Frequency() {}

    public DefaultAtomic_Frequency(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }

    // Property http://www.owl-ontologies.com/unnamed.owl#frequency
    public Frequency_Expression getFrequency() {
        return (Frequency_Expression) getPropertyValueAs(getFrequencyProperty(), Frequency_Expression.class);
    }

    public RDFProperty getFrequencyProperty() {
        final String uri  = "http://www.owl-ontologies.com/unnamed.owl#frequency";
        final String name = getOWLModel().getResourceNameForURI(uri);

        return getOWLModel().getRDFProperty(name);
    }

    public boolean hasFrequency() {
        return getPropertyValueCount(getFrequencyProperty()) > 0;
    }

    public void setFrequency(Frequency_Expression newFrequency) {
        setPropertyValue(getFrequencyProperty(), newFrequency);
    }

    // Property http://www.owl-ontologies.com/unnamed.owl#until
    public Criterion getUntil() {
        return (Criterion) getPropertyValueAs(getUntilProperty(), Criterion.class);
    }

    public RDFProperty getUntilProperty() {
        final String uri  = "http://www.owl-ontologies.com/unnamed.owl#until";
        final String name = getOWLModel().getResourceNameForURI(uri);

        return getOWLModel().getRDFProperty(name);
    }

    public boolean hasUntil() {
        return getPropertyValueCount(getUntilProperty()) > 0;
    }

    public void setUntil(Criterion newUntil) {
        setPropertyValue(getUntilProperty(), newUntil);
    }
}


//~ Formatted by Jindent --- http://www.jindent.com
