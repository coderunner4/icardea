<?xml version="1.0" encoding="utf-8"?>
  <!--
  ~ ////////////////////////////////////////////////////////////////////////////////
  ~ //
  ~ //  Kap IT  -  Copyright 2009 Kap IT  -  All Rights Reserved.  
  ~ //   
  ~ //  TERMS OF USE  
  ~ //  Developers who wish to access source code must agree to the License that accompanies the code
  ~ //  (see file “License.txt” contained in the archive, or http://lab.kapit.fr/display/Store/Licenses)
  ~ //  If you use the source code, you accept to be bound by the License.  If you do not accept the License, do not use the source code.  
  ~ //  Licensees may use the source code to assist with the development of related software. Licensees may not modify or redistribute the source code.  
  ~ //
  ~ ////////////////////////////////////////////////////////////////////////////////
  -->
<!--
  ~ ////////////////////////////////////////////////////////////////////////////////
  ~ // This tool can be used to change diagrammer mode (link creation, hand or selection mode)
  ~ // It also reflect change to diagrammer mode, should this change be cause by this tool  
  ~ // or an external cause.
  ~ ////////////////////////////////////////////////////////////////////////////////
 -->
<mx:TitleWindow initialize="init()" xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:source = "tr.com.srdc.icardea.gui.variables.*" 
	title="Parameter Properties" width="1187" height="778"  >
    <mx:Script>
		<![CDATA[
			import tr.com.srdc.icardea.gui.scriptEditor.ScriptEditor;
			
		import tr.com.srdc.icardea.gui.scriptEditor.ScriptEditor;
		import tr.com.srdc.icardea.model.steps.ConsultStep;
		import net.customware.flex.util.xml.converter.ArrayConverter;
		import mx.core.Application;
		import tr.com.srdc.icardea.model.variables.Variable;
		import tr.com.srdc.icardea.model.steps.FinalStep;
		import mx.controls.Alert;
		import mx.containers.TitleWindow;
		import mx.managers.PopUpManager;
		import mx.collections.ArrayCollection;
		import com.kapit.diagram.DiagramEvent;
        import com.kapit.diagram.view.DiagramView;
       
        [Bindable]
        public var csVariable:Variable;
        
        [Bindable]
        public var script:ScriptEditor;
        
        [Bindable]
        public var cStep:ConsultStep;
        
        [Bindable]
        public var arr:ArrayCollection = new ArrayCollection;
        
        [Bindable]
        private var dataSource:ArrayCollection = new ArrayCollection;
       
        
        private function init():void{
        	dataSource.addItem("Cardiac Implantable Electronic Device(CIED)");
        	dataSource.addItem("Electronic Health Record(EHR)");
        	dataSource.addItem("Personal Health Record(PHR)");
        }
             	
        public function selectConcept():void
        {
        	var epopup:DataSourcesTree = new DataSourcesTree;
        	PopUpManager.addPopUp(epopup, Application.application as DisplayObject,true);
    	
            PopUpManager.centerPopUp(epopup);
            epopup.treeVar = csVariable;
            
        }
        /* public function deleteConcept():void
        {
        	if(myGrid2.selectedItem == null)
        		Alert.show("Please select a variable to edit", "No Variable Selected");
        	if(myGrid2.selectedItem !=null)
        	{	
	        	for(var i:int=0;i<csVariable.concept.length;i++)
	        	{
	        		if(myGrid2.selectedItem.code==csVariable.concept.getItemAt(i).code)
	        		{
	        			csVariable.concept.removeItemAt(i);
	        			if(csVariable.concept.length == 0)
	        			{
	        				trace(csVariable.dataSource.length);
	        				for(var j:int=0;j<csVariable.dataSource.length;)
	        				{
	        					csVariable.dataSource.removeItemAt(j);
	        					trace(csVariable.dataSource.length);
	        				}
	        			}
	        			//csVariable.dataSource.removeItemAt(i);
	        		}
	        	}
	        }	
        } */
      
        public function saveVariableProperties():void
        {
        	csVariable.name=varName.text;
        	csVariable.type=varType.selectedItem.toString();
        	csVariable.refValue = refValue.text;
        	PopUpManager.removePopUp(this);
        	
        	//TODO:Variable ların concept ve datasource ları save edilecek
            
        }
        private function cancelVariableProperties():void{
        	PopUpManager.removePopUp(this);
        }
        public function index():int
        {
        	var ind:int = 0;
        	if(myArr !=null)
        	{
	        	for(var i:int = 0; i< myArr.length ; i++)
	        	{
	        		if(myArr.getItemAt(i)==csVariable.type)
	        			ind=i;
	        	}
	        }
        	return ind;
        }
        private function changeSourcesView():void{
        	if(sources.selectedItem == "Cardiac Implantable Electronic Device(CIED)"){
        		sourceStack.selectedIndex = 0;
        	}
        	else if(sources.selectedItem == "Electronic Health Record(EHR)"){
        		sourceStack.selectedIndex = 1;
        	}
        	else if(sources.selectedItem == "Personal Health Record(PHR)"){
        		sourceStack.selectedIndex = 1;
        	}
        }
        
        ]]>
	</mx:Script>
	<mx:Style>       
        .myFormItemLabelStyle {
            fontSize: 11;
         }
         
    </mx:Style>
    
    <mx:VBox width="100%" height="100%">
        <mx:Form width="100%">
        	<mx:FormItem labelStyleName="myFormItemLabelStyle" label="Name:"  >
	         	<mx:TextInput id="varName"  text="{csVariable.name}"/>
	         </mx:FormItem>
	         <mx:FormItem labelStyleName="myFormItemLabelStyle" label="Type:" >
	         	<mx:ComboBox id="varType" selectedIndex="{index()}">
	         		<mx:ArrayCollection id="myArr">
		            	<mx:String>Number</mx:String>
		         		<mx:String>Text</mx:String>
		         		<mx:String>List</mx:String>
		         		<mx:String>True/False</mx:String>
		         	</mx:ArrayCollection>
	         	</mx:ComboBox>
	         </mx:FormItem>
	         <mx:FormItem labelStyleName="myFormItemLabelStyle" label="Normal Value (Optional):" >
	         	<mx:TextInput id="refValue" text="{csVariable.refValue}" />
	         </mx:FormItem>
        </mx:Form> 
        <mx:Label text="From which system do you want to add this parameter?" fontSize="12"/>
        <mx:HBox width="100%">
        	<mx:DataGrid id="sources" change="changeSourcesView()" width="50%" height="100%" dataProvider="{dataSource}">
        		<mx:columns>
    	   	   		<mx:DataGridColumn headerText="Source" dataField="source"/>
    		 	</mx:columns> 
        	</mx:DataGrid>
        	<mx:ViewStack id="sourceStack" width="100%" height="100%" creationPolicy="all">
        		<source:CIEDDataSources width="100%" height="100%"/>
        		<source:EHRPHRDataSources width="100%" height="100%"/>
        	</mx:ViewStack>
        	<!--<mx:Button label="Select"/>-->
        </mx:HBox>
        <mx:Text text="Source Info: " fontSize="12"/>
        <mx:Text id="sourceInfo" color="#2F77D1" fontSize="12"/>
        <mx:HBox horizontalAlign="right" width="100%">
	    	<mx:Button icon="@Embed(source='/assets/save.png')" label="Save" click="saveVariableProperties()" />
	    	<mx:Button icon="@Embed(source='/assets/cancel.png')" label="Cancel" click="cancelVariableProperties()"/>
	    </mx:HBox>
	</mx:VBox>
</mx:TitleWindow>

