<?xml version="1.0" encoding="utf-8"?>
  <!--
  ~ ////////////////////////////////////////////////////////////////////////////////
  ~ //
  ~ //  Kap IT  -  Copyright 2009 Kap IT  -  All Rights Reserved.  
  ~ //   
  ~ //  TERMS OF USE  
  ~ //  Developers who wish to access source code must agree to the License that accompanies the code
  ~ //  (see file “License.txt” contained in the archive, or http://lab.kapit.fr/display/Store/Licenses)
  ~ //  If you use the source code, you accept to be bound by the License.  If you do not accept the License, do not use the source code.  
  ~ //  Licensees may use the source code to assist with the development of related software. Licensees may not modify or redistribute the source code.  
  ~ //
  ~ ////////////////////////////////////////////////////////////////////////////////
  -->
<!--
  ~ ////////////////////////////////////////////////////////////////////////////////
  ~ // This tool can be used to change diagrammer mode (link creation, hand or selection mode)
  ~ // It also reflect change to diagrammer mode, should this change be cause by this tool  
  ~ // or an external cause.
  ~ ////////////////////////////////////////////////////////////////////////////////
 -->
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" title="Assign Guideline to the Patient"  >

    <mx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.messaging.channels.SecureAMFChannel;
			import mx.messaging.Channel;
			import mx.messaging.ChannelSet;
			import mx.rpc.remoting.RemoteObject;
			import tr.com.srdc.icardea.gui.careplan.DefinedCareplans;
			import tr.com.srdc.icardea.model.careplan.MedicalCareplan;
			import mx.controls.PopUpButton;
			import tr.com.srdc.icardea.model.userRoles.Patient;
			import mx.collections.ArrayCollection;
			
			import mx.managers.PopUpManager;
	
		[Bindable]
        public var patients:ArrayCollection=new ArrayCollection;
        [Bindable]
        public var caregivers:ArrayCollection=new ArrayCollection;
		[Bindable]
        public var sparent:DefinedCareplans;
		
		
		public function assign():void
		{	
			//sparent.myViewStack.selectedIndex=0;
			//trace("ICD10Code: "+(sparent.dgrid.selectedItem as MedicalCareplan).ICD10Code);
			if((dgrid.selectedItem as Patient).assignedCareplans == null){
				(dgrid.selectedItem as Patient).assignedCareplans = new ArrayCollection;
				trace("burdaa1");
			}				
			
			(dgrid.selectedItem as Patient).assignedCareplans.addItem(sparent.dgrid.selectedItem as MedicalCareplan);
			//trace("status: "+(dgrid.selectedItem as Patient).assignedCareplans.getItemAt(0).ICD10Code)
			
			//trace((dgrid.selectedItem as Patient).assignedCareplans);
			var service : RemoteObject = new RemoteObject("subscriptionService");
			var cs:ChannelSet = new ChannelSet();
			var customChannel:Channel = new SecureAMFChannel("my-amf","/icardea_careplaneditor/messagebroker/amf");
			cs.addChannel(customChannel);
			service.channelSet = cs;
			service.addEventListener(ResultEvent.RESULT,onAssignCareplans2Patient);
			service.addEventListener(FaultEvent.FAULT, onFault);
			
			
			service.assignCareplan2Patient((dgrid.selectedItem as Patient).assignedCareplans, (dgrid.selectedItem as Patient));
			
		}
		private function onAssignCareplans2Patient(result:ResultEvent):void 
       	{
       		
       		sparent.sparent.monitorPatients.init();
       		PopUpManager.removePopUp(this);
       	} 
       
      	private function onFault(fault:FaultEvent):void 
       	{
       		Alert.show(fault.fault.name +"\n" + fault.fault.message, "Error");
       	}
		private function cancel():void{
			PopUpManager.removePopUp(this);
		}
		public function openCaregivers():void{
			patientStack.selectedIndex = 1;
			var service : RemoteObject = new RemoteObject("subscriptionService");
			var cs:ChannelSet = new ChannelSet();
			var customChannel:Channel = new SecureAMFChannel("my-amf","/icardea_careplaneditor/messagebroker/amf");
			cs.addChannel(customChannel);
			service.channelSet = cs;
			service.addEventListener(ResultEvent.RESULT,onListCaregivers);
			service.addEventListener(FaultEvent.FAULT, onFault);
			service.listCaregivers(dgrid.selectedItem as Patient);
		}
		private function onListCaregivers(result:ResultEvent):void{
			if(result != null){
				caregivers = result.result as ArrayCollection;
			}
			
		}
		public function addCaregiver():void{
			
		}
		public function editCaregiver():void{
			
		}
		public function deleteCaregiver():void{
			
		}
		
        
        ]]>
	</mx:Script>
	<mx:ViewStack width="100%" height="100%" id="patientStack" creationPolicy="all">
		<mx:VBox width="100%" height="100%">
	    	<mx:DataGrid styleName="usersGrid" width="100%" height="100%" id="dgrid" dataProvider="{this.patients}" borderStyle="none">
				<mx:columns>
					<mx:DataGridColumn headerText="ID" dataField="personID" />
					<mx:DataGridColumn headerText="Name" dataField="name"/>	
					<mx:DataGridColumn headerText="Surname" dataField="surname" />
					<mx:DataGridColumn headerText="Gender" dataField="gender" />
					<mx:DataGridColumn headerText="Birthdate" dataField="dateOfBirth" />
					<!--<mx:DataGridColumn headerText="Caregiver">
			   	    	<mx:itemRenderer>
							<mx:Component>
								<mx:HBox horizontalAlign="center">
									<mx:LinkButton toolTip="Show Caregivers" icon="@Embed('/assets/careplaneditor/edit.png')" click="outerDocument.openCaregivers()"/>
								</mx:HBox>
							</mx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>-->
				</mx:columns>
			</mx:DataGrid>
			<mx:HBox horizontalAlign="right" width="100%">
		    	<mx:Button icon="@Embed(source='/assets/save.png')" label="Assign" click="assign()" />
		    	<mx:Button icon="@Embed(source='/assets/cancel.png')" label="Cancel" click="cancel()"/>
		    </mx:HBox>
	    </mx:VBox>
	    <mx:VBox width="100%" height="100%">
	    	<mx:DataGrid styleName="usersGrid" width="100%" height="100%" id="caregiversGrid" dataProvider="{this.caregivers}" borderStyle="none">
				<mx:columns>
					<mx:DataGridColumn headerText="ID" dataField="identifier" />
					<mx:DataGridColumn headerText="Name" dataField="name"/>	
					<mx:DataGridColumn headerText="Surname" dataField="surname" />
					<mx:DataGridColumn headerText="E-mail" dataField="contact.email" />
					<mx:DataGridColumn headerText="Phone" dataField="contact.phoneNumber" />
					<mx:DataGridColumn headerText="Operations">
	    	   	    	<mx:itemRenderer>
							<mx:Component>
								<mx:HBox width="100%" horizontalAlign="center">
									<mx:LinkButton toolTip="Add Caregiver" icon="@Embed('/assets/careplaneditor/add.png')" click="outerDocument.addCaregiver()" width="20" height="20"/>
									<mx:LinkButton toolTip="Edit Caregiver" icon="@Embed('/assets/careplaneditor/edit.png')" click="outerDocument.editCaregiver()" width="20" height="20"/>
									<mx:LinkButton toolTip="Delete Caregiver" icon="@Embed('/assets/careplaneditor/delete.png')" click="outerDocument.deleteCaregiver()" width="20" height="20"/>
								</mx:HBox>
							</mx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>			
				</mx:columns>
			</mx:DataGrid>
	    </mx:VBox>
	</mx:ViewStack>
</mx:TitleWindow> 
