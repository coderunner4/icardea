<?xml version="1.0" encoding="utf-8"?>
  
<mx:VBox xmlns="fr.kapit.skin.component.*" xmlns:mx="http://www.adobe.com/2006/mxml"
           paddingTop="5" paddingLeft="5" paddingRight="5"
           buttonMode="true" alpha="1.0" horizontalAlign="left"
           verticalAlign="top" width="100%" height="100%" initialize="initializeGrid()">
    <mx:Script>
		<![CDATA[
			import tr.com.srdc.icardea.gui.CarePlanEditor;
			import tr.com.srdc.icardea.careplan.CareplanModel;
			import tr.com.srdc.icardea.careplan.CareplanModelImp;
			import tr.com.srdc.icardea.control.CareplanControl;
			import tr.com.srdc.icardea.control.CareplanControlImp;
			import mx.controls.Alert;
			import tr.com.srdc.icardea.patient.assignPatient;
			import mx.managers.PopUpManager;
			import tr.com.srdc.icardea.model.careplan.MedicalCareplan;
			import mx.messaging.Channel;
			import mx.messaging.channels.SecureAMFChannel;
			import mx.messaging.ChannelSet;
			import mx.rpc.remoting.RemoteObject;
			import mx.collections.ArrayCollection;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
        
        [Bindable]
        private var model:CareplanModel = new CareplanModelImp();
        [Bindable]
        private var control:CareplanControl; 
        [Bindable]
		private var mcp:MedicalCareplan;
		[Bindable]
		private var carePlanEditor:CarePlanEditor;
		   
        public function initializeGrid():void
        {	this.control = new CareplanControlImp(this.model);
        	this.control.listCareplans();
        }        
        private function openSelected():void
        {	
        	carePlanEditor = parentApplication.careplanDT;
           	if (dgrid.selectedItem != null) { 
        		mcp = new MedicalCareplan;
	    		mcp.id =dgrid.selectedItem.id;
	    		mcp.name = dgrid.selectedItem.name;
	    	
	    		mcp.careplan = (dgrid.selectedItem as MedicalCareplan).careplan;
 				mcp.diagram = (dgrid.selectedItem as MedicalCareplan).diagram;
 				carePlanEditor.control = this.control;
				carePlanEditor.careplan = mcp;
        		parentApplication.viewStack.selectedIndex = 3;
	    		parentApplication.careplanDT.execute=false;
	    		parentApplication.careplanDT.doSettings();
	    		
	    		
	    	}
	        if(dgrid.selectedItem == null)
	        {
	        	Alert.show("Please select a care plan to open", "No Care Plan Selected");
	        }
        }
        
        private function newCP():void
        {
        	var newPop:CareplanProperties = new CareplanProperties;
        	
        	var mc:MedicalCareplan = new MedicalCareplan;
        	newPop.medicalCareplan=mc;
        	newPop.control = this.control;
        	        					
           	PopUpManager.addPopUp(newPop, this,true);
           	PopUpManager.centerPopUp(newPop);
             	
        }
        public function editCP():void
        {
        	var newPop:CareplanProperties = new CareplanProperties;
        	for(var i:int=0;i<this.model.careplans.length;i++)
        	{
        		if(dgrid.selectedItem.name==this.model.careplans.getItemAt(i).name && dgrid.selectedItem.id==this.model.careplans.getItemAt(i).id && dgrid.selectedItem.version==this.model.careplans.getItemAt(i).version)
        		{
        			newPop.medicalCareplan=this.model.careplans.getItemAt(i) as MedicalCareplan;
        		}
        	}
        	newPop.control = this.control;
         	PopUpManager.addPopUp(newPop, this,true);
            PopUpManager.centerPopUp(newPop);
           
        }
        public function deleteCP():void
        {
          	this.control.deleteCareplan(dgrid.selectedItem as MedicalCareplan);
           
        }
       
        public function assignCP():void
        {
        	//TODO:Registered patientlardan oluşan listeyi göster o careplanı o patienta assign et.
        	var service : RemoteObject = new RemoteObject("subscriptionService");
			var cs:ChannelSet = new ChannelSet();
			var customChannel:Channel = new SecureAMFChannel("my-amf","/icardea_careplaneditor/messagebroker/amf");
			cs.addChannel(customChannel);
			service.channelSet = cs;
			service.addEventListener(ResultEvent.RESULT,onResultRegisteredPatients);
			service.addEventListener(FaultEvent.FAULT, onFault);
			service.listRegisteredPatients();
       	}
       	private function onResultRegisteredPatients(result:ResultEvent):void 
       	{
       		var assignPop:assignPatient = new assignPatient;
        	
        	trace((result.result as ArrayCollection).length);
        	for(var i:int =0; i< (result.result as ArrayCollection).length;i++)
        	{
        		(assignPop.arr as ArrayCollection).addItem((result.result as ArrayCollection).getItemAt(i));
        	}
        	assignPop.arr = result.result as ArrayCollection;
        	assignPop.sparent=this;
        	PopUpManager.addPopUp(assignPop, this,true);
        	PopUpManager.centerPopUp(assignPop);
       		
       		
       	} 
       
      	private function onFault(fault:FaultEvent):void 
       	{
       		Alert.show(fault.fault.faultString);	
       	}
        
        
        ]]>
	</mx:Script>
    <mx:Label text="Care Plans:" width="100%" fontWeight="bold" enabled="true" fontFamily="Arial" fontSize="20"/>
    <!--<mx:ViewStack id="myViewStack" width="937" height="329">-->
		<mx:VBox id="MDE" label="Medical Domain Expert" width="100%" height="100%" fontWeight="bold" >
		    <mx:HBox width="100%" height="50%">
			    <mx:DataGrid resizableColumns="true" styleName="usersGrid" width="100%" height="100%" id="dgrid" dataProvider="{this.model.careplans}" borderStyle="none">
					<mx:columns>
						<mx:DataGridColumn dataField="id" headerText="ID"  />
						<mx:DataGridColumn dataField="name" headerText="Name" />	
						<mx:DataGridColumn dataField="edit" headerText="Edit" >
							<mx:itemRenderer>
								<mx:Component>
									<mx:HBox width="100%" horizontalAlign="center">
										<mx:LinkButton icon="@Embed('/assets/careplaneditor/edit.png')" click="outerDocument.editCP()"  />
									</mx:HBox>
								</mx:Component>
							</mx:itemRenderer>	
						</mx:DataGridColumn>	
						<mx:DataGridColumn dataField="delete" headerText="Delete" >
							<mx:itemRenderer>
								<mx:Component>
									<mx:HBox width="100%" horizontalAlign="center">
										<mx:LinkButton icon="@Embed('/assets/careplaneditor/delete.png')" click="outerDocument.deleteCP()" />
									</mx:HBox>
								</mx:Component>
							</mx:itemRenderer>	
						</mx:DataGridColumn>
						<mx:DataGridColumn dataField="assign" headerText="Assign to patient">
							<mx:itemRenderer>
								<mx:Component>
									<mx:HBox width="100%" horizontalAlign="center">
										<mx:LinkButton icon="@Embed('/assets/careplaneditor/assign.png')" click="outerDocument.assignCP()" />
									</mx:HBox>
								</mx:Component>
							</mx:itemRenderer>	
						</mx:DataGridColumn>																
					</mx:columns>
				</mx:DataGrid>				
			</mx:HBox>
			<mx:HBox width="100%">
				<mx:Button id="newCareplan" label="Create New Care Plan" click="newCP()" styleName="adminButton"/>
			    <mx:Button id="openDiagram" label="Open Care Plan" click="openSelected()" styleName="adminButton"/>		
			</mx:HBox>	
    	</mx:VBox>
</mx:VBox>