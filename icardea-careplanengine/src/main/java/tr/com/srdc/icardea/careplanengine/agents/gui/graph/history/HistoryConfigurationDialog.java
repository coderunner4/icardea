
/*
* HistoryConfigurationDialog.java
*
* Created on July 27, 2006, 3:39 PM
 */
package tr.com.srdc.icardea.careplanengine.agents.gui.graph.history;

//~--- non-JDK imports --------------------------------------------------------

import tr.com.srdc.icardea.careplanengine.agents.gui.graph.PopupControl;

//~--- JDK imports ------------------------------------------------------------

import java.awt.*;

import javax.swing.*;

/**
 *
 * @author  mehmet
 */
public class HistoryConfigurationDialog extends javax.swing.JDialog {
    private Font normalFont   = null;
    private Font selectedFont = null;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton   cancelButton;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JPanel    jPanel1;
    private GuidelineHistoryFrame parent;
    private javax.swing.JButton   saveButton;
    private javax.swing.JButton   selectAllButton;

    // End of variables declaration//GEN-END:variables

    /** Creates new form HistoryConfigurationDialog */
    public HistoryConfigurationDialog(GuidelineHistoryFrame guidelineHistoryFrame) {
        initComponents();
        parent = guidelineHistoryFrame;
        setLocationRelativeTo(parent);
        prepareCheckBoxes();
    }

    private void prepareCheckBoxes() {
        normalFont   = jCheckBox1.getFont();
        selectedFont = new Font(normalFont.getName(), Font.BOLD, normalFont.getSize());
        normalFont   = new Font(normalFont.getName(), Font.PLAIN, normalFont.getSize());

        /*
         *      boolean prefs[] = parent.getHistoryPreferences();
         *    int i=0;
         *    jCheckBox1.setSelected( prefs[i++] );
         *    jCheckBox2.setSelected( prefs[i++] );
         *    jCheckBox3.setSelected( prefs[i++] );
         *    jCheckBox4.setSelected( prefs[i++] );
         *    jCheckBox5.setSelected( prefs[i++] );
         *    jCheckBox6.setSelected( prefs[i++] );
         *    jCheckBox7.setSelected( prefs[i++] );
         *
         *    jCheckBox1ActionPerformed(null);
         *    jCheckBox2ActionPerformed(null);
         *    jCheckBox3ActionPerformed(null);
         *    jCheckBox4ActionPerformed(null);
         *    jCheckBox5ActionPerformed(null);
         *    jCheckBox6ActionPerformed(null);
         *    jCheckBox7ActionPerformed(null);
         */
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1         = new javax.swing.JPanel();
        jCheckBox1      = new javax.swing.JCheckBox();
        jCheckBox2      = new javax.swing.JCheckBox();
        jCheckBox3      = new javax.swing.JCheckBox();
        jCheckBox4      = new javax.swing.JCheckBox();
        jCheckBox5      = new javax.swing.JCheckBox();
        jCheckBox6      = new javax.swing.JCheckBox();
        jCheckBox7      = new javax.swing.JCheckBox();
        cancelButton    = new javax.swing.JButton();
        saveButton      = new javax.swing.JButton();
        selectAllButton = new javax.swing.JButton();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Configure History");
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("History Types to be Displayed"));
        jCheckBox1.setSelected(true);
        jCheckBox1.setText("Medical Web Services");
        jCheckBox1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        jCheckBox2.setSelected(true);
        jCheckBox2.setText("EHR Data of the Patient");
        jCheckBox2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });
        jCheckBox3.setSelected(true);
        jCheckBox3.setText("Alarm Messages");
        jCheckBox3.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox3.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });
        jCheckBox4.setSelected(true);
        jCheckBox4.setText("Wait events");
        jCheckBox4.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox4.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });
        jCheckBox5.setSelected(true);
        jCheckBox5.setText("Decision Steps");
        jCheckBox5.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox5.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });
        jCheckBox6.setSelected(true);
        jCheckBox6.setText("Consult Events");
        jCheckBox6.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox6.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox6ActionPerformed(evt);
            }
        });
        jCheckBox7.setSelected(true);
        jCheckBox7.setText("Sensor Web Services");
        jCheckBox7.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox7.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox7ActionPerformed(evt);
            }
        });
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        selectAllButton.setText("Select All");
        selectAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectAllButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);

        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(
                jPanel1Layout.createSequentialGroup().add(30, 30, 30).add(
                    jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(
                        jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false).add(
                            org.jdesktop.layout.GroupLayout.LEADING, jCheckBox6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).add(
                            org.jdesktop.layout.GroupLayout.LEADING, jCheckBox5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).add(
                            org.jdesktop.layout.GroupLayout.LEADING, jCheckBox4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).add(
                            org.jdesktop.layout.GroupLayout.LEADING, jCheckBox3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).add(
                            org.jdesktop.layout.GroupLayout.LEADING, jCheckBox2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).add(
                            org.jdesktop.layout.GroupLayout.LEADING, jCheckBox1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).add(
                            org.jdesktop.layout.GroupLayout.LEADING, jCheckBox7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).add(
                                jPanel1Layout.createSequentialGroup().add(
                                    selectAllButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).add(
                                    54, 54, 54).add(
                                    saveButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 85, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).addPreferredGap(
                                    org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).add(
                                    cancelButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).addPreferredGap(
                                    org.jdesktop.layout.LayoutStyle.RELATED))).addContainerGap()));
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(
                jPanel1Layout.createSequentialGroup().addContainerGap().add(
                    jCheckBox1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                    org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).add(14, 14, 14).add(
                        jCheckBox2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 15, Short.MAX_VALUE).add(
                        14, 14, 14).add(
                        jCheckBox3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 15, Short.MAX_VALUE).add(
                        14, 14, 14).add(
                        jCheckBox4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 15, Short.MAX_VALUE).add(
                        14, 14, 14).add(
                        jCheckBox5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 15, Short.MAX_VALUE).add(
                        14, 14, 14).add(
                        jCheckBox6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 15, Short.MAX_VALUE).add(
                        14, 14, 14).add(
                        jCheckBox7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 15, Short.MAX_VALUE).add(
                        45, 45, 45).add(
                        jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(
                            org.jdesktop.layout.GroupLayout.TRAILING,
                            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE).add(
                                cancelButton).add(saveButton)).add(
                                    org.jdesktop.layout.GroupLayout.TRAILING, selectAllButton))));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());

        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(
                layout.createSequentialGroup().addContainerGap().add(
                    jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                    org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                    org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).addContainerGap(
                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(
                layout.createSequentialGroup().addContainerGap().add(
                    jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                    org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addContainerGap()));
        pack();
    }    // </editor-fold>//GEN-END:initComponents

    private void jCheckBox7ActionPerformed(java.awt.event.ActionEvent evt) {    // GEN-FIRST:event_jCheckBox7ActionPerformed
        Font font = normalFont;

        if (jCheckBox7.isSelected()) {
            font = selectedFont;
        }

        jCheckBox7.setFont(font);
    }    // GEN-LAST:event_jCheckBox7ActionPerformed

    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {    // GEN-FIRST:event_jCheckBox6ActionPerformed
        Font font = normalFont;

        if (jCheckBox6.isSelected()) {
            font = selectedFont;
        }

        jCheckBox6.setFont(font);
    }    // GEN-LAST:event_jCheckBox6ActionPerformed

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {    // GEN-FIRST:event_jCheckBox5ActionPerformed
        Font font = normalFont;

        if (jCheckBox5.isSelected()) {
            font = selectedFont;
        }

        jCheckBox5.setFont(font);
    }    // GEN-LAST:event_jCheckBox5ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {    // GEN-FIRST:event_jCheckBox3ActionPerformed
        Font font = normalFont;

        if (jCheckBox3.isSelected()) {
            font = selectedFont;
        }

        jCheckBox3.setFont(font);
    }    // GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {    // GEN-FIRST:event_jCheckBox2ActionPerformed
        Font font = normalFont;

        if (jCheckBox2.isSelected()) {
            font = selectedFont;
        }

        jCheckBox2.setFont(font);
    }    // GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {    // GEN-FIRST:event_jCheckBox1ActionPerformed
        Font font = normalFont;

        if (jCheckBox1.isSelected()) {
            font = selectedFont;
        }

        jCheckBox1.setFont(font);
    }    // GEN-LAST:event_jCheckBox1ActionPerformed

    private void selectAllButtonActionPerformed(java.awt.event.ActionEvent evt) {    // GEN-FIRST:event_selectAllButtonActionPerformed
        jCheckBox1.setSelected(true);
        jCheckBox2.setSelected(true);
        jCheckBox3.setSelected(true);
        jCheckBox4.setSelected(true);
        jCheckBox5.setSelected(true);
        jCheckBox6.setSelected(true);
        jCheckBox7.setSelected(true);
        jCheckBox1.setFont(selectedFont);
        jCheckBox2.setFont(selectedFont);
        jCheckBox3.setFont(selectedFont);
        jCheckBox4.setFont(selectedFont);
        jCheckBox5.setFont(selectedFont);
        jCheckBox6.setFont(selectedFont);
        jCheckBox7.setFont(selectedFont);
    }    // GEN-LAST:event_selectAllButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {    // GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }    // GEN-LAST:event_cancelButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {    // GEN-FIRST:event_saveButtonActionPerformed
        PopupControl.getInstance().refreshHistory();
        this.dispose();
        JOptionPane.showMessageDialog(this, "Filtering has been applied to history dialog.");
    }    // GEN-LAST:event_saveButtonActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {    // GEN-FIRST:event_jCheckBox4ActionPerformed
        Font font = normalFont;

        if (jCheckBox4.isSelected()) {
            font = selectedFont;
        }

        jCheckBox4.setFont(font);
    }    // GEN-LAST:event_jCheckBox4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

//              new HistoryConfigurationDialog(this).setVisible(true);
            }
        });
    }
}


//~ Formatted by Jindent --- http://www.jindent.com
